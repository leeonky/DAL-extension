version: 2.1
jobs:
  #  test:
  #    docker:
  #      - image: openjdk:8u342
  #    steps:
  #      - checkout
  #      - run:
  #          name: test
  #          command: |
  #            ./gradlew tasks
  #            export PUB_VERSION=$(VERSION_SCOPE='' ./gradlew currentVersion -q)
  #            echo "Check version[${PUB_VERSION}] and tag"
  #            bash -c '! (git tag | grep "^${PUB_VERSION}$")'
  #            echo $GPG_KEY | base64 --decode > ${SIGNING_SECRETKEYRINGFILE}
  #            ./gradlew -Dorg.gradle.project.signing.keyId="$SIGNING_KEYID" -Dorg.gradle.project.signing.password="$SIGNING_PASSWORD" -Dorg.gradle.project.signing.secretKeyRingFile="$SIGNING_SECRETKEYRINGFILE" check build coveralls
  #
  #  publish:
  #    docker:
  #      - image: openjdk:8u342
  #    steps:
  #      - checkout
  #      - run:
  #          name: test
  #          command: |
  #            ./gradlew tasks
  #            export PUB_VERSION=$(VERSION_SCOPE='' ./gradlew currentVersion -q)
  #            echo "Check version[${PUB_VERSION}] and tag"
  #            bash -c '! (git tag | grep "^${PUB_VERSION}$")'
  #            echo $GPG_KEY | base64 --decode > ${SIGNING_SECRETKEYRINGFILE}
  #            export PUB_VERSION=$(./gradlew currentVersion -q)
  #            ./gradlew -Dorg.gradle.project.signing.keyId="$SIGNING_KEYID" -Dorg.gradle.project.signing.password="$SIGNING_PASSWORD" -Dorg.gradle.project.signing.secretKeyRingFile="$SIGNING_SECRETKEYRINGFILE" check build publishToNexus
  #            git config --global user.email "travis@travis-ci.org"
  #            git config --global user.name "Travis CI"
  #            git tag ${PUB_VERSION} -a -m 'CI Release'
  #            git push -q "https://${GH_TOKEN}@github.com/leeonky/$(basename $(pwd)).git" --tags

  build:
    docker:
      - image: openjdk:8u342
    steps:
      - checkout
      - run:
          name: test
          command: |
            ./gradlew check build coveralls
      - run:
          name: check version
          command: |
            export PUB_VERSION=$(VERSION_SCOPE='' ./gradlew currentVersion -q)
            bash -c 'git tag | grep -q "^${PUB_VERSION}$"' && echo "Still version ${PUB_VERSION}, CI done"
      - run:
          name: publish
          when: on_fail
          command: |
            export PUB_VERSION=$(VERSION_SCOPE='' ./gradlew currentVersion -q)
            echo "Release and tag new version $PUB_VERSION"
            echo $GPG_KEY | base64 --decode > ${SIGNING_SECRETKEYRINGFILE}
            ./gradlew -Dorg.gradle.project.signing.keyId="$SIGNING_KEYID" -Dorg.gradle.project.signing.password="$SIGNING_PASSWORD" -Dorg.gradle.project.signing.secretKeyRingFile="$SIGNING_SECRETKEYRINGFILE" publishToNexus
            git config --global user.email "travis@travis-ci.org"
            git config --global user.name "Travis CI"
            git tag ${PUB_VERSION} -a -m 'CI Release'
            git push -q "https://${GH_TOKEN}@github.com/leeonky/$(basename $(pwd)).git" --tags

#      - run:
#          name: test1
#          command: |
#            ./gradlew tasks
#            export PUB_VERSION=$(VERSION_SCOPE='' ./gradlew currentVersion -q)
#            ./gradlew check build coveralls
#            bash -c 'git tag | grep -q "^${PUB_VERSION}$"' && echo "Still version ${PUB_VERSION}, CI done" || exit 0
#            echo "Release and tag new version $PUB_VERSION"
#            echo $GPG_KEY | base64 --decode > ${SIGNING_SECRETKEYRINGFILE}
#            ./gradlew -Dorg.gradle.project.signing.keyId="$SIGNING_KEYID" -Dorg.gradle.project.signing.password="$SIGNING_PASSWORD" -Dorg.gradle.project.signing.secretKeyRingFile="$SIGNING_SECRETKEYRINGFILE" publishToNexus
#            git config --global user.email "travis@travis-ci.org"
#            git config --global user.name "Travis CI"
#            git tag ${PUB_VERSION} -a -m 'CI Release'
#            git push -q "https://${GH_TOKEN}@github.com/leeonky/$(basename $(pwd)).git" --tags

#workflows:
#  version: 2
#  test:
#    jobs:
#      - test
#        filters:
#          branches:
#            only: main
